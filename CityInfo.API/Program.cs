using Microsoft.AspNetCore.StaticFiles;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

//builder.Services.AddControllers(); // generated by template...

builder.Services.AddControllers(options =>
{
	options.ReturnHttpNotAcceptable = true; // reject xml format requests, because we are not formatting for it. returns 406 code.
}).AddXmlDataContractSerializerFormatters(); // add the ability to respond with xml

// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

builder.Services.AddSingleton<FileExtensionContentTypeProvider>(); // to determine extensions of static files...

//// adding problem details for error information
//builder.Services.AddProblemDetails(options =>
//{
//	options.CustomizeProblemDetails = ctx =>
//	{
//		ctx.ProblemDetails.Extensions.Add("additionalInfo", "additional info example");
//		ctx.ProblemDetails.Extensions.Add("server", Environment.MachineName);
//	};
//});

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
	app.UseSwagger();
	app.UseSwaggerUI();
}

app.UseHttpsRedirection();

app.UseRouting();

app.UseAuthorization();

app.UseEndpoints(endpoints =>
{
	endpoints.MapControllers();
}); // the warning wants you to just use app.MapControllers(); below... for tutorial we are using the old way, which is app.UseRouting(), and app.UseEndpoints(...)

//app.MapControllers();

app.Run();
